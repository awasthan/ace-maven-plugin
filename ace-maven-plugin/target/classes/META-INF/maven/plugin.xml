<?xml version="1.0" encoding="UTF-8"?>

<!-- Generated by maven-plugin-tools 3.4 on 2019-06-06 -->

<plugin>
  <name>ace-maven-plugin</name>
  <description></description>
  <groupId>ibm.maven.plugins</groupId>
  <artifactId>ace-maven-plugin</artifactId>
  <version>11.14</version>
  <goalPrefix>ace</goalPrefix>
  <isolatedRealm>false</isolatedRealm>
  <inheritedByDefault>true</inheritedByDefault>
  <mojos>
    <mojo>
      <goal>clean-bar-build-workspace</goal>
      <description>Cleans up the ${ace.workspace} directory. Build errors will appear in the ace Toolkit if .msgflow files are left under the ${ace.workspace} - the path determines the Namespace of the flow and that
certainly won&apos;t match the original directory structure.</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>false</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>ibm.maven.plugins.ace.mojos.CleanBarBuildWorkspaceMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>debugWorkspace</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>set to true to disable the workspace cleaning</description>
        </parameter>
        <parameter>
          <name>workspace</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description>The path of the workspace in which the projects were created.</description>
        </parameter>
      </parameters>
      <configuration>
        <debugWorkspace implementation="boolean" default-value="true">${ace.debugWorkspace}</debugWorkspace>
        <workspace implementation="java.io.File" default-value="${project.build.directory}/ace/workspace">${ace.workspace}</workspace>
      </configuration>
    </mojo>
    <mojo>
      <goal>create-bar</goal>
      <description>Creates a .bar file from a ace-bar Project.

Implemented with help from: https://github.com/TimMoore/mojo-executor/blob/master/README.md</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <phase>compile</phase>
      <implementation>ibm.maven.plugins.ace.mojos.CreateBarMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>applicationName</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>applyBarOverride</name>
          <type>java.lang.Boolean</type>
          <required>true</required>
          <editable>true</editable>
          <description>Whether the applybaroverride command should be executed or not</description>
        </parameter>
        <parameter>
          <name>barName</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description>The name of the BAR (compressed file format) archive file where the
result is stored.</description>
        </parameter>
        <parameter>
          <name>cleanBuild</name>
          <type>boolean</type>
          <required>true</required>
          <editable>true</editable>
          <description>Refreshes the projects in the workspace and then invokes a clean build before new items are added to the BAR file.</description>
        </parameter>
        <parameter>
          <name>createBarTraceFile</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description>The name of the trace file to use when creating bar files</description>
        </parameter>
        <parameter>
          <name>deployAsSource</name>
          <type>boolean</type>
          <required>true</required>
          <editable>true</editable>
          <description>Include &quot;-deployAsSource&quot; parameter?</description>
        </parameter>
        <parameter>
          <name>discardJarsPattern</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Pattern (or patterns, comma separated) of jars to be excluded from the generated bar file</description>
        </parameter>
        <parameter>
          <name>esql21</name>
          <type>boolean</type>
          <required>true</required>
          <editable>true</editable>
          <description>Compile ESQL for brokers at Version 2.1 of the product.</description>
        </parameter>
        <parameter>
          <name>excludeArtifactsPattern</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Exclude artifacts pattern (or patterns, comma separated). By default, exclude pom.xml&apos;s as each project will have one and this causes a packaging error.</description>
        </parameter>
        <parameter>
          <name>includeArtifactsPattern</name>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>true</editable>
          <description>Include artifacts pattern (or patterns, comma separated). By default, the default value used for mqsipackagebar, except .esql &amp; .subflow, which as not compilable</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The Maven Project Object</description>
        </parameter>
        <parameter>
          <name>projectName</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Projects containing files to include in the BAR file in the workspace. Required for a new workspace. A new workspace is a system folder which don&apos;t contain a .metadata folder.</description>
        </parameter>
        <parameter>
          <name>session</name>
          <type>org.apache.maven.execution.MavenSession</type>
          <required>true</required>
          <editable>false</editable>
          <description>The Maven Session Object</description>
        </parameter>
        <parameter>
          <name>skipWSErrorCheck</name>
          <type>java.lang.Boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Whether classloaders are in use with this bar</description>
        </parameter>
        <parameter>
          <name>toolkitInstallDir</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description>Installation directory of the ace Toolkit</description>
        </parameter>
        <parameter>
          <name>toolkitVersion</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Major Version number of the ace Toolkit. (Current not used, but will be needed when support for difference Versions with different options is supported)</description>
        </parameter>
        <parameter>
          <name>useClassloaders</name>
          <type>java.lang.Boolean</type>
          <required>true</required>
          <editable>true</editable>
          <description>Whether classloaders are in use with this bar</description>
        </parameter>
        <parameter>
          <name>versionString</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Appends the _ (underscore) character and the value of VersionString to the names of the compiled versions of the message flows (.cmf) files added to the BAR file, before the file extension.</description>
        </parameter>
        <parameter>
          <name>workspace</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description>The path of the workspace in which the projects are extracted to be built.</description>
        </parameter>
      </parameters>
      <configuration>
        <applicationName implementation="java.lang.String" default-value="">${ace.applicationName}</applicationName>
        <applyBarOverride implementation="java.lang.Boolean" default-value="true">${ace.applybaroverride}</applyBarOverride>
        <barName implementation="java.io.File" default-value="${project.build.directory}/ace/${project.artifactId}-${project.version}.bar">${ace.barName}</barName>
        <cleanBuild implementation="boolean" default-value="true">${ace.cleanBuild}</cleanBuild>
        <createBarTraceFile implementation="java.io.File" default-value="${project.build.directory}/createbartrace.txt">${ace.createBarTraceFile}</createBarTraceFile>
        <deployAsSource implementation="boolean" default-value="true">${ace.deployAsSource}</deployAsSource>
        <discardJarsPattern implementation="java.lang.String" default-value="**/javacompute_**.jar,**/jplugin2_**.jar">${ace.discardJarsPattern}</discardJarsPattern>
        <esql21 implementation="boolean" default-value="false">${ace.esql21}</esql21>
        <excludeArtifactsPattern implementation="java.lang.String" default-value="**/pom.xml">${ace.excludeArtifactsPattern}</excludeArtifactsPattern>
        <includeArtifactsPattern implementation="java.lang.String" default-value="**/*.xsdzip,**/*.tblxmi,**/*.xsd,**/*.wsdl,**/*.dictionary,**/*.xsl,**/*.xslt,**/*.xml,**/*.jar,**/*.inadapter,**/*.outadapter,**/*.insca,**/*.outsca,**/*.descriptor,**/*.idl,**/*.map,**/*.msgflow">${ace.includeArtifactsPattern}</includeArtifactsPattern>
        <project implementation="org.apache.maven.project.MavenProject">${project}</project>
        <projectName implementation="java.lang.String" default-value="">${ace.projectName}</projectName>
        <session implementation="org.apache.maven.execution.MavenSession">${session}</session>
        <skipWSErrorCheck implementation="java.lang.Boolean" default-value="false">${ace.skipWSErrorCheck}</skipWSErrorCheck>
        <toolkitInstallDir implementation="java.io.File">${ace.toolkitInstallDir}</toolkitInstallDir>
        <toolkitVersion implementation="java.lang.String" default-value="10">${ace.toolkitVersion}</toolkitVersion>
        <useClassloaders implementation="java.lang.Boolean" default-value="false">${ace.useClassloaders}</useClassloaders>
        <versionString implementation="java.lang.String" default-value="${project.version}">${ace.versionString}</versionString>
        <workspace implementation="java.io.File" default-value="${project.build.directory}/ace/workspace">${ace.workspace}</workspace>
      </configuration>
      <requirements>
        <requirement>
          <role>org.apache.maven.plugin.BuildPluginManager</role>
          <field-name>buildPluginManager</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>help</goal>
      <description>Display help information on ace-maven-plugin.&lt;br&gt;
Call &lt;code&gt;mvn ace:help -Ddetail=true -Dgoal=&amp;lt;goal-name&amp;gt;&lt;/code&gt; to display parameter details.</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>false</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>ibm.maven.plugins.ace.mojos.HelpMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>true</threadSafe>
      <parameters>
        <parameter>
          <name>detail</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>If &lt;code&gt;true&lt;/code&gt;, display all settable properties for each goal.</description>
        </parameter>
        <parameter>
          <name>goal</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The name of the goal for which to show help. If unspecified, all goals will be displayed.</description>
        </parameter>
        <parameter>
          <name>indentSize</name>
          <type>int</type>
          <required>false</required>
          <editable>true</editable>
          <description>The number of spaces per indentation level, should be positive.</description>
        </parameter>
        <parameter>
          <name>lineLength</name>
          <type>int</type>
          <required>false</required>
          <editable>true</editable>
          <description>The maximum length of a display line, should be positive.</description>
        </parameter>
      </parameters>
      <configuration>
        <detail implementation="boolean" default-value="false">${detail}</detail>
        <goal implementation="java.lang.String">${goal}</goal>
        <indentSize implementation="int" default-value="2">${indentSize}</indentSize>
        <lineLength implementation="int" default-value="80">${lineLength}</lineLength>
      </configuration>
    </mojo>
    <mojo>
      <goal>package-ace-bar</goal>
      <description>Creates a .bar file from a ace-bar Project.

Implemented with help from: https://github.com/TimMoore/mojo-executor/blob/master/README.md</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>ibm.maven.plugins.ace.mojos.PackageaceBarMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>applicationName</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>applyBarOverride</name>
          <type>java.lang.Boolean</type>
          <required>true</required>
          <editable>true</editable>
          <description>Whether the applybaroverride command should be executed or not</description>
        </parameter>
        <parameter>
          <name>barName</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description>The name of the BAR (compressed file format) archive file where the
result is stored.</description>
        </parameter>
        <parameter>
          <name>buildAssemblyFile</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>false</editable>
          <description>The path to write the assemblies/ace-bar-project.xml file to before invoking the maven-assembly-plugin.</description>
        </parameter>
        <parameter>
          <name>cleanBuild</name>
          <type>boolean</type>
          <required>true</required>
          <editable>true</editable>
          <description>Refreshes the projects in the workspace and then invokes a clean build before new items are added to the BAR file.</description>
        </parameter>
        <parameter>
          <name>createBarTraceFile</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description>The name of the trace file to use when creating bar files</description>
        </parameter>
        <parameter>
          <name>deployAsSource</name>
          <type>boolean</type>
          <required>true</required>
          <editable>true</editable>
          <description>Include &quot;-deployAsSource&quot; parameter?</description>
        </parameter>
        <parameter>
          <name>discardJarsPattern</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Pattern (or patterns, comma separated) of jars to be excluded from the generated bar file</description>
        </parameter>
        <parameter>
          <name>esql21</name>
          <type>boolean</type>
          <required>true</required>
          <editable>true</editable>
          <description>Compile ESQL for brokers at Version 2.1 of the product.</description>
        </parameter>
        <parameter>
          <name>excludeArtifactsPattern</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Exclude artifacts pattern (or patterns, comma separated). By default, exclude pom.xml&apos;s as each project will have one and this causes a packaging error.</description>
        </parameter>
        <parameter>
          <name>includeArtifactsPattern</name>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>true</editable>
          <description>Include artifacts pattern (or patterns, comma separated). By default, the default value used for mqsipackagebar, except .esql &amp; .subflow, which as not compilable</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The Maven Project Object</description>
        </parameter>
        <parameter>
          <name>projectName</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Projects containing files to include in the BAR file in the workspace. Required for a new workspace. A new workspace is a system folder which don&apos;t contain a .metadata folder.</description>
        </parameter>
        <parameter>
          <name>session</name>
          <type>org.apache.maven.execution.MavenSession</type>
          <required>true</required>
          <editable>false</editable>
          <description>The Maven Session Object</description>
        </parameter>
        <parameter>
          <name>skipWSErrorCheck</name>
          <type>java.lang.Boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Whether classloaders are in use with this bar</description>
        </parameter>
        <parameter>
          <name>toolkitInstallDir</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description>Installation directory of the ace Toolkit</description>
        </parameter>
        <parameter>
          <name>toolkitVersion</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Major Version number of the ace Toolkit. (Current not used, but will be needed when support for difference Versions with different options is supported)</description>
        </parameter>
        <parameter>
          <name>useClassloaders</name>
          <type>java.lang.Boolean</type>
          <required>true</required>
          <editable>true</editable>
          <description>Whether classloaders are in use with this bar</description>
        </parameter>
        <parameter>
          <name>versionString</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Appends the _ (underscore) character and the value of VersionString to the names of the compiled versions of the message flows (.cmf) files added to the BAR file, before the file extension.</description>
        </parameter>
        <parameter>
          <name>workspace</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description>The path of the workspace in which the projects are extracted to be built.</description>
        </parameter>
      </parameters>
      <configuration>
        <applicationName implementation="java.lang.String" default-value="">${ace.applicationName}</applicationName>
        <applyBarOverride implementation="java.lang.Boolean" default-value="true">${ace.applybaroverride}</applyBarOverride>
        <barName implementation="java.io.File" default-value="${project.build.directory}/ace/${project.artifactId}-${project.version}.bar">${ace.barName}</barName>
        <buildAssemblyFile implementation="java.io.File" default-value="${project.build.directory}/assemblies/ace-bar-project.xml"/>
        <cleanBuild implementation="boolean" default-value="true">${ace.cleanBuild}</cleanBuild>
        <createBarTraceFile implementation="java.io.File" default-value="${project.build.directory}/createbartrace.txt">${ace.createBarTraceFile}</createBarTraceFile>
        <deployAsSource implementation="boolean" default-value="true">${ace.deployAsSource}</deployAsSource>
        <discardJarsPattern implementation="java.lang.String" default-value="**/javacompute_**.jar,**/jplugin2_**.jar">${ace.discardJarsPattern}</discardJarsPattern>
        <esql21 implementation="boolean" default-value="false">${ace.esql21}</esql21>
        <excludeArtifactsPattern implementation="java.lang.String" default-value="**/pom.xml">${ace.excludeArtifactsPattern}</excludeArtifactsPattern>
        <includeArtifactsPattern implementation="java.lang.String" default-value="**/*.xsdzip,**/*.tblxmi,**/*.xsd,**/*.wsdl,**/*.dictionary,**/*.xsl,**/*.xslt,**/*.xml,**/*.jar,**/*.inadapter,**/*.outadapter,**/*.insca,**/*.outsca,**/*.descriptor,**/*.idl,**/*.map,**/*.msgflow">${ace.includeArtifactsPattern}</includeArtifactsPattern>
        <project implementation="org.apache.maven.project.MavenProject">${project}</project>
        <projectName implementation="java.lang.String" default-value="">${ace.projectName}</projectName>
        <session implementation="org.apache.maven.execution.MavenSession">${session}</session>
        <skipWSErrorCheck implementation="java.lang.Boolean" default-value="false">${ace.skipWSErrorCheck}</skipWSErrorCheck>
        <toolkitInstallDir implementation="java.io.File">${ace.toolkitInstallDir}</toolkitInstallDir>
        <toolkitVersion implementation="java.lang.String" default-value="10">${ace.toolkitVersion}</toolkitVersion>
        <useClassloaders implementation="java.lang.Boolean" default-value="false">${ace.useClassloaders}</useClassloaders>
        <versionString implementation="java.lang.String" default-value="${project.version}">${ace.versionString}</versionString>
        <workspace implementation="java.io.File" default-value="${project.build.directory}/ace/workspace">${ace.workspace}</workspace>
      </configuration>
      <requirements>
        <requirement>
          <role>org.apache.maven.plugin.BuildPluginManager</role>
          <field-name>buildPluginManager</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>package-classloader</goal>
      <description>Creates a .zip file from a ace-classloader Project which contains the

Implemented with help from: https://github.com/TimMoore/mojo-executor/blob/master/README.md</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>ibm.maven.plugins.ace.mojos.PackageaceClassloaderMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>buildAssemblyFile</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>false</editable>
          <description>The path to write the assemblies/ace-bar-project.xml file to before invoking the maven-assembly-plugin.</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The Maven Project Object</description>
        </parameter>
        <parameter>
          <name>session</name>
          <type>org.apache.maven.execution.MavenSession</type>
          <required>true</required>
          <editable>false</editable>
          <description>The Maven Session Object</description>
        </parameter>
      </parameters>
      <configuration>
        <buildAssemblyFile implementation="java.io.File" default-value="${project.build.directory}/assemblies/ace-classloader-project.xml"/>
        <project implementation="org.apache.maven.project.MavenProject">${project}</project>
        <session implementation="org.apache.maven.execution.MavenSession">${session}</session>
      </configuration>
      <requirements>
        <requirement>
          <role>org.apache.maven.plugin.BuildPluginManager</role>
          <field-name>buildPluginManager</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>package-par</goal>
      <description>Creates a .par file from a ace-par Project

Implemented with help from: https://github.com/TimMoore/mojo-executor/blob/master/README.md</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>ibm.maven.plugins.ace.mojos.PackageaceParMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>buildAssemblyFile</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>false</editable>
          <description>The path to write the assemblies/ace-bar-project.xml file to before invoking the maven-assembly-plugin.</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The Maven Project Object</description>
        </parameter>
        <parameter>
          <name>session</name>
          <type>org.apache.maven.execution.MavenSession</type>
          <required>true</required>
          <editable>false</editable>
          <description>The Maven Session Object</description>
        </parameter>
      </parameters>
      <configuration>
        <buildAssemblyFile implementation="java.io.File" default-value="${project.build.directory}/assemblies/ace-par-project.xml"/>
        <project implementation="org.apache.maven.project.MavenProject">${project}</project>
        <session implementation="org.apache.maven.execution.MavenSession">${session}</session>
      </configuration>
      <requirements>
        <requirement>
          <role>org.apache.maven.plugin.BuildPluginManager</role>
          <field-name>buildPluginManager</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>package-src</goal>
      <description>Packages a WebSphere Message Broker Project.

Implemented with help from: https://github.com/TimMoore/mojo-executor/blob/master/README.md</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>ibm.maven.plugins.ace.mojos.PackageaceSrcMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>buildAssemblyFile</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>false</editable>
          <description>The path to write the assemblies/ace-src-project.xml file to before invoking the maven-assembly-plugin.</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The Maven Project Object</description>
        </parameter>
        <parameter>
          <name>session</name>
          <type>org.apache.maven.execution.MavenSession</type>
          <required>true</required>
          <editable>false</editable>
          <description>The Maven Session Object</description>
        </parameter>
      </parameters>
      <configuration>
        <buildAssemblyFile implementation="java.io.File" default-value="${project.build.directory}/assemblies/ace-src-project.xml"/>
        <project implementation="org.apache.maven.project.MavenProject">${project}</project>
        <session implementation="org.apache.maven.execution.MavenSession">${session}</session>
      </configuration>
      <requirements>
        <requirement>
          <role>org.apache.maven.plugin.BuildPluginManager</role>
          <field-name>buildPluginManager</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>package-udn-jar</goal>
      <description>Creates a .zip file from a ace-classloader Project which contains the

Implemented with help from: https://github.com/TimMoore/mojo-executor/blob/master/README.md</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>ibm.maven.plugins.ace.mojos.PackageUserDefinedNodeJarMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The Maven Project Object</description>
        </parameter>
        <parameter>
          <name>session</name>
          <type>org.apache.maven.execution.MavenSession</type>
          <required>true</required>
          <editable>false</editable>
          <description>The Maven Session Object</description>
        </parameter>
      </parameters>
      <configuration>
        <project implementation="org.apache.maven.project.MavenProject">${project}</project>
        <session implementation="org.apache.maven.execution.MavenSession">${session}</session>
      </configuration>
      <requirements>
        <requirement>
          <role>org.apache.maven.plugin.BuildPluginManager</role>
          <field-name>buildPluginManager</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>prepare-ace-classloader-packaging</goal>
      <description>Copies the dependencies into a directory for packaging later

Implemented with help from: https://github.com/TimMoore/mojo-executor/blob/master/README.md

requiresDependencyResolution below is required for the unpack-dependencies goal to work correctly. See https://github.com/TimMoore/mojo-executor/issues/3</description>
      <requiresDependencyResolution>test</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>ibm.maven.plugins.ace.mojos.PrepareaceClassloaderPackagingMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>classloaderPath</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>false</editable>
          <description>The path where the classloader jars will be copied to for packaging later.</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The Maven Project Object</description>
        </parameter>
        <parameter>
          <name>session</name>
          <type>org.apache.maven.execution.MavenSession</type>
          <required>true</required>
          <editable>false</editable>
          <description>The Maven Session Object</description>
        </parameter>
      </parameters>
      <configuration>
        <classloaderPath implementation="java.io.File" default-value="${project.build.directory}/ace/classloader">${ace.classloaderPath}</classloaderPath>
        <project implementation="org.apache.maven.project.MavenProject">${project}</project>
        <session implementation="org.apache.maven.execution.MavenSession">${session}</session>
      </configuration>
      <requirements>
        <requirement>
          <role>org.apache.maven.plugin.BuildPluginManager</role>
          <field-name>buildPluginManager</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>prepare-ace-par-packaging</goal>
      <description>Copies the dependencies into a directory for packaging later

Implemented with help from: https://github.com/TimMoore/mojo-executor/blob/master/README.md

requiresDependencyResolution below is required for the unpack-dependencies goal to work correctly. See https://github.com/TimMoore/mojo-executor/issues/3</description>
      <requiresDependencyResolution>test</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>ibm.maven.plugins.ace.mojos.PrepareaceParPackagingMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The Maven Project Object</description>
        </parameter>
        <parameter>
          <name>session</name>
          <type>org.apache.maven.execution.MavenSession</type>
          <required>true</required>
          <editable>false</editable>
          <description>The Maven Session Object</description>
        </parameter>
      </parameters>
      <configuration>
        <project implementation="org.apache.maven.project.MavenProject">${project}</project>
        <session implementation="org.apache.maven.execution.MavenSession">${session}</session>
      </configuration>
      <requirements>
        <requirement>
          <role>org.apache.maven.plugin.BuildPluginManager</role>
          <field-name>buildPluginManager</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>prepare-bar-build-workspace</goal>
      <description>Unpacks the dependent WebSphere Message Broker Projects.

Implemented with help from: https://github.com/TimMoore/mojo-executor/blob/master/README.md

requiresDependencyResolution below is required for the unpack-dependencies goal to work correctly. See https://github.com/TimMoore/mojo-executor/issues/3</description>
      <requiresDependencyResolution>test</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>ibm.maven.plugins.ace.mojos.PrepareBarBuildWorkspaceMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The Maven Project Object</description>
        </parameter>
        <parameter>
          <name>session</name>
          <type>org.apache.maven.execution.MavenSession</type>
          <required>true</required>
          <editable>false</editable>
          <description>The Maven Session Object</description>
        </parameter>
        <parameter>
          <name>unpackDependenciesDirectory</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>false</editable>
          <description>The path of the workspace in which the projects will be unpacked.</description>
        </parameter>
        <parameter>
          <name>workspace</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description>The path of the workspace in which the projects are extracted to be built.</description>
        </parameter>
      </parameters>
      <configuration>
        <project implementation="org.apache.maven.project.MavenProject">${project}</project>
        <session implementation="org.apache.maven.execution.MavenSession">${session}</session>
        <unpackDependenciesDirectory implementation="java.io.File" default-value="${project.build.directory}/ace/dependencies">${ace.unpackDependenciesDirectory}</unpackDependenciesDirectory>
        <workspace implementation="java.io.File" default-value="${project.build.directory}/ace/workspace">${ace.workspace}</workspace>
      </configuration>
      <requirements>
        <requirement>
          <role>org.apache.maven.plugin.BuildPluginManager</role>
          <field-name>buildPluginManager</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>validate-bar-build-workspace</goal>
      <description>Unpacks the dependent WebSphere Message Broker Projects.

Implemented with help from: https://github.com/TimMoore/mojo-executor/blob/master/README.md

requiresDependencyResolution below is required for the unpack-dependencies goal to work correctly. See https://github.com/TimMoore/mojo-executor/issues/3</description>
      <requiresDependencyResolution>test</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>ibm.maven.plugins.ace.mojos.ValidateBarBuildWorkspaceMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The Maven Project Object</description>
        </parameter>
        <parameter>
          <name>session</name>
          <type>org.apache.maven.execution.MavenSession</type>
          <required>true</required>
          <editable>false</editable>
          <description>The Maven Session Object</description>
        </parameter>
        <parameter>
          <name>unpackDependenciesDirectory</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>false</editable>
          <description>The path of the workspace in which the projects will be unpacked.</description>
        </parameter>
        <parameter>
          <name>workspace</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description>The path of the workspace in which the projects are extracted to be built.</description>
        </parameter>
      </parameters>
      <configuration>
        <project implementation="org.apache.maven.project.MavenProject">${project}</project>
        <session implementation="org.apache.maven.execution.MavenSession">${session}</session>
        <unpackDependenciesDirectory implementation="java.io.File" default-value="${project.build.directory}/ace/dependencies">${ace.unpackDependenciesDirectory}</unpackDependenciesDirectory>
        <workspace implementation="java.io.File" default-value="${project.build.directory}/ace/workspace">${ace.workspace}</workspace>
      </configuration>
      <requirements>
        <requirement>
          <role>org.apache.maven.plugin.BuildPluginManager</role>
          <field-name>buildPluginManager</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>validate-classloader-approach</goal>
      <description>Goal which reads the default.properties file to figure out if the classloader approach for this bar project is consistent. Either all jar nodes in all flows must use a classloader or none of them
should.</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>ibm.maven.plugins.ace.mojos.ValidateClassloaderApproachMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>defaultPropertiesFile</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description>The name of the default properties file to be generated from the bar file.</description>
        </parameter>
        <parameter>
          <name>failOnInvalidClassloader</name>
          <type>java.lang.Boolean</type>
          <required>true</required>
          <editable>true</editable>
          <description>Whether or not to fail the build if the classloader approach is invalid.</description>
        </parameter>
        <parameter>
          <name>useClassloaders</name>
          <type>java.lang.Boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Whether classloaders are in use with this bar</description>
        </parameter>
      </parameters>
      <configuration>
        <defaultPropertiesFile implementation="java.io.File" default-value="${project.build.directory}/ace/default.properties">${ace.configurablePropertiesFile}</defaultPropertiesFile>
        <failOnInvalidClassloader implementation="java.lang.Boolean" default-value="true">${ace.failOnInvalidClassloader}</failOnInvalidClassloader>
        <useClassloaders implementation="java.lang.Boolean" default-value="false">${ace.useClassloaders}</useClassloaders>
      </configuration>
    </mojo>
    <mojo>
      <goal>validate-configurable-properties</goal>
      <description>Goal which reads the a bar file, including creating a list of configurable properties</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <phase>package</phase>
      <implementation>ibm.maven.plugins.ace.mojos.ValidateConfigurablePropertiesMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>aceRunDir</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description>Installation directory of the ace runtime</description>
        </parameter>
        <parameter>
          <name>applicationName</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Projects containing files to include in the BAR file in the workspace. Required for a new workspace. A new workspace is a system folder which don&apos;t contain a .metadata folder.</description>
        </parameter>
        <parameter>
          <name>applyBarOverride</name>
          <type>java.lang.Boolean</type>
          <required>true</required>
          <editable>true</editable>
          <description>Whether the applybaroverride command should be executed or not</description>
        </parameter>
        <parameter>
          <name>applyBarOverrideRecursively</name>
          <type>java.lang.Boolean</type>
          <required>true</required>
          <editable>true</editable>
          <description>Whether the applybaroverride command should be executed or not</description>
        </parameter>
        <parameter>
          <name>applyBarOverrideTraceFile</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description>The basename of the trace file to use when applybaroverriding bar files</description>
        </parameter>
        <parameter>
          <name>barName</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description>The name of the BAR (compressed file format) archive file where the result is stored.</description>
        </parameter>
        <parameter>
          <name>configPropFileDirectory</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description>The path of directory containing properties file for override.</description>
        </parameter>
        <parameter>
          <name>defaultPropertiesFile</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description>The name of the default properties file to be generated from the bar file.</description>
        </parameter>
        <parameter>
          <name>failOnInvalidProperties</name>
          <type>java.lang.Boolean</type>
          <required>true</required>
          <editable>true</editable>
          <description>Whether or not to fail the build if properties are found to be invalid.</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The Maven Project Object</description>
        </parameter>
        <parameter>
          <name>session</name>
          <type>org.apache.maven.execution.MavenSession</type>
          <required>true</required>
          <editable>false</editable>
          <description>The Maven Session Object</description>
        </parameter>
        <parameter>
          <name>toolkitInstallDir</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description>Installation directory of the ace Toolkit</description>
        </parameter>
        <parameter>
          <name>versionString</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Appends the _ (underscore) character and the value of VersionString to the names of the compiled versions of the message flows (.cmf) files added to the BAR file, before the file extension.</description>
        </parameter>
        <parameter>
          <name>workspace</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description>The path of the workspace in which the projects are extracted to be built.</description>
        </parameter>
      </parameters>
      <configuration>
        <aceRunDir implementation="java.io.File">${ace.aceRunDir}</aceRunDir>
        <applicationName implementation="java.lang.String">${ace.applicationName}</applicationName>
        <applyBarOverride implementation="java.lang.Boolean" default-value="true">${ace.applybaroverride}</applyBarOverride>
        <applyBarOverrideRecursively implementation="java.lang.Boolean" default-value="true">${ace.applyBarOverrideRecursively}</applyBarOverrideRecursively>
        <applyBarOverrideTraceFile implementation="java.io.File" default-value="${project.build.directory}/applybaroverridetrace.txt">${ace.applyBarOverrideTraceFile}</applyBarOverrideTraceFile>
        <barName implementation="java.io.File" default-value="${project.build.directory}/ace/${project.artifactId}-${project.version}.bar">${ace.barName}</barName>
        <configPropFileDirectory implementation="java.io.File" default-value="${project.build.directory}/ace">${ace.configPropFileDirectory}</configPropFileDirectory>
        <defaultPropertiesFile implementation="java.io.File" default-value="${project.build.directory}/ace/default.properties">${ace.configurablePropertiesFile}</defaultPropertiesFile>
        <failOnInvalidProperties implementation="java.lang.Boolean" default-value="true">${ace.failOnInvalidProperties}</failOnInvalidProperties>
        <project implementation="org.apache.maven.project.MavenProject">${project}</project>
        <session implementation="org.apache.maven.execution.MavenSession">${session}</session>
        <toolkitInstallDir implementation="java.io.File">${ace.toolkitInstallDir}</toolkitInstallDir>
        <versionString implementation="java.lang.String" default-value="${project.version}">${ace.versionString}</versionString>
        <workspace implementation="java.io.File" default-value="${project.build.directory}/ace/workspace">${ace.workspace}</workspace>
      </configuration>
      <requirements>
        <requirement>
          <role>org.apache.maven.plugin.BuildPluginManager</role>
          <field-name>buildPluginManager</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>validate-project</goal>
      <description>Validates the ace project</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>ibm.maven.plugins.ace.mojos.ValidateProjectMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The Maven Project Object</description>
        </parameter>
        <parameter>
          <name>workspace</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description>The path of the workspace in which the projects were created.</description>
        </parameter>
      </parameters>
      <configuration>
        <project implementation="org.apache.maven.project.MavenProject">${project}</project>
        <workspace implementation="java.io.File" default-value="${project.build.directory}/ace/workspace">${ace.workspace}</workspace>
      </configuration>
    </mojo>
  </mojos>
  <dependencies>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <type>jar</type>
      <version>1.0.13</version>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-core</artifactId>
      <type>jar</type>
      <version>1.0.13</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <type>jar</type>
      <version>1.7.5</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-plugin-api</artifactId>
      <type>jar</type>
      <version>3.3.3</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-model</artifactId>
      <type>jar</type>
      <version>3.3.3</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-artifact</artifactId>
      <type>jar</type>
      <version>3.3.3</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.sisu</groupId>
      <artifactId>org.eclipse.sisu.plexus</artifactId>
      <type>jar</type>
      <version>0.3.0</version>
    </dependency>
    <dependency>
      <groupId>javax.enterprise</groupId>
      <artifactId>cdi-api</artifactId>
      <type>jar</type>
      <version>1.0</version>
    </dependency>
    <dependency>
      <groupId>javax.annotation</groupId>
      <artifactId>jsr250-api</artifactId>
      <type>jar</type>
      <version>1.0</version>
    </dependency>
    <dependency>
      <groupId>javax.inject</groupId>
      <artifactId>javax.inject</artifactId>
      <type>jar</type>
      <version>1</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.sisu</groupId>
      <artifactId>org.eclipse.sisu.inject</artifactId>
      <type>jar</type>
      <version>0.3.0</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-component-annotations</artifactId>
      <type>jar</type>
      <version>1.5.5</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-classworlds</artifactId>
      <type>jar</type>
      <version>2.5.2</version>
    </dependency>
    <dependency>
      <groupId>org.twdata.maven</groupId>
      <artifactId>mojo-executor</artifactId>
      <type>jar</type>
      <version>2.2.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-core</artifactId>
      <type>jar</type>
      <version>3.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-settings</artifactId>
      <type>jar</type>
      <version>3.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-settings-builder</artifactId>
      <type>jar</type>
      <version>3.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-model-builder</artifactId>
      <type>jar</type>
      <version>3.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-aether-provider</artifactId>
      <type>jar</type>
      <version>3.0</version>
    </dependency>
    <dependency>
      <groupId>org.sonatype.aether</groupId>
      <artifactId>aether-impl</artifactId>
      <type>jar</type>
      <version>1.7</version>
    </dependency>
    <dependency>
      <groupId>org.sonatype.aether</groupId>
      <artifactId>aether-spi</artifactId>
      <type>jar</type>
      <version>1.7</version>
    </dependency>
    <dependency>
      <groupId>org.sonatype.aether</groupId>
      <artifactId>aether-api</artifactId>
      <type>jar</type>
      <version>1.7</version>
    </dependency>
    <dependency>
      <groupId>org.sonatype.aether</groupId>
      <artifactId>aether-util</artifactId>
      <type>jar</type>
      <version>1.7</version>
    </dependency>
    <dependency>
      <groupId>org.sonatype.sisu</groupId>
      <artifactId>sisu-inject-plexus</artifactId>
      <type>jar</type>
      <version>1.4.2</version>
    </dependency>
    <dependency>
      <groupId>org.sonatype.sisu</groupId>
      <artifactId>sisu-inject-bean</artifactId>
      <type>jar</type>
      <version>1.4.2</version>
    </dependency>
    <dependency>
      <groupId>org.sonatype.sisu</groupId>
      <artifactId>sisu-guice</artifactId>
      <type>jar</type>
      <version>2.1.7</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-interpolation</artifactId>
      <type>jar</type>
      <version>1.14</version>
    </dependency>
    <dependency>
      <groupId>org.sonatype.plexus</groupId>
      <artifactId>plexus-sec-dispatcher</artifactId>
      <type>jar</type>
      <version>1.3</version>
    </dependency>
    <dependency>
      <groupId>org.sonatype.plexus</groupId>
      <artifactId>plexus-cipher</artifactId>
      <type>jar</type>
      <version>1.4</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-utils</artifactId>
      <type>jar</type>
      <version>2.0.6</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.plugins</groupId>
      <artifactId>maven-dependency-plugin</artifactId>
      <type>jar</type>
      <version>2.8</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-project</artifactId>
      <type>jar</type>
      <version>2.0.9</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-profile</artifactId>
      <type>jar</type>
      <version>2.0.9</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-plugin-registry</artifactId>
      <type>jar</type>
      <version>2.0.9</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-artifact-manager</artifactId>
      <type>jar</type>
      <version>2.0.9</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.wagon</groupId>
      <artifactId>wagon-provider-api</artifactId>
      <type>jar</type>
      <version>1.0-beta-2</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-repository-metadata</artifactId>
      <type>jar</type>
      <version>2.0.9</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.reporting</groupId>
      <artifactId>maven-reporting-api</artifactId>
      <type>jar</type>
      <version>3.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.reporting</groupId>
      <artifactId>maven-reporting-impl</artifactId>
      <type>jar</type>
      <version>2.0.5</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.doxia</groupId>
      <artifactId>doxia-core</artifactId>
      <type>jar</type>
      <version>1.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.shared</groupId>
      <artifactId>maven-doxia-tools</artifactId>
      <type>jar</type>
      <version>1.0.2</version>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <type>jar</type>
      <version>1.4</version>
    </dependency>
    <dependency>
      <groupId>commons-validator</groupId>
      <artifactId>commons-validator</artifactId>
      <type>jar</type>
      <version>1.2.0</version>
    </dependency>
    <dependency>
      <groupId>commons-beanutils</groupId>
      <artifactId>commons-beanutils</artifactId>
      <type>jar</type>
      <version>1.7.0</version>
    </dependency>
    <dependency>
      <groupId>commons-digester</groupId>
      <artifactId>commons-digester</artifactId>
      <type>jar</type>
      <version>1.6</version>
    </dependency>
    <dependency>
      <groupId>commons-logging</groupId>
      <artifactId>commons-logging</artifactId>
      <type>jar</type>
      <version>1.0.4</version>
    </dependency>
    <dependency>
      <groupId>oro</groupId>
      <artifactId>oro</artifactId>
      <type>jar</type>
      <version>2.0.8</version>
    </dependency>
    <dependency>
      <groupId>xml-apis</groupId>
      <artifactId>xml-apis</artifactId>
      <type>jar</type>
      <version>1.0.b2</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.doxia</groupId>
      <artifactId>doxia-sink-api</artifactId>
      <type>jar</type>
      <version>1.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.doxia</groupId>
      <artifactId>doxia-site-renderer</artifactId>
      <type>jar</type>
      <version>1.0</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-i18n</artifactId>
      <type>jar</type>
      <version>1.0-beta-7</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-velocity</artifactId>
      <type>jar</type>
      <version>1.1.7</version>
    </dependency>
    <dependency>
      <groupId>org.apache.velocity</groupId>
      <artifactId>velocity</artifactId>
      <type>jar</type>
      <version>1.5</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.doxia</groupId>
      <artifactId>doxia-decoration-model</artifactId>
      <type>jar</type>
      <version>1.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.doxia</groupId>
      <artifactId>doxia-module-apt</artifactId>
      <type>jar</type>
      <version>1.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.doxia</groupId>
      <artifactId>doxia-module-fml</artifactId>
      <type>jar</type>
      <version>1.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.doxia</groupId>
      <artifactId>doxia-module-xdoc</artifactId>
      <type>jar</type>
      <version>1.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.doxia</groupId>
      <artifactId>doxia-module-xhtml</artifactId>
      <type>jar</type>
      <version>1.0</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-archiver</artifactId>
      <type>jar</type>
      <version>2.3</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.shared</groupId>
      <artifactId>file-management</artifactId>
      <type>jar</type>
      <version>1.2.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.shared</groupId>
      <artifactId>maven-shared-io</artifactId>
      <type>jar</type>
      <version>1.1</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-container-default</artifactId>
      <type>jar</type>
      <version>1.0-alpha-9-stable-1</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-io</artifactId>
      <type>jar</type>
      <version>2.0.6</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.shared</groupId>
      <artifactId>maven-dependency-analyzer</artifactId>
      <type>jar</type>
      <version>1.4</version>
    </dependency>
    <dependency>
      <groupId>asm</groupId>
      <artifactId>asm</artifactId>
      <type>jar</type>
      <version>3.3.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.shared</groupId>
      <artifactId>maven-dependency-tree</artifactId>
      <type>jar</type>
      <version>2.1</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.aether</groupId>
      <artifactId>aether-util</artifactId>
      <type>jar</type>
      <version>0.9.0.M2</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.shared</groupId>
      <artifactId>maven-common-artifact-filters</artifactId>
      <type>jar</type>
      <version>1.4</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.shared</groupId>
      <artifactId>maven-invoker</artifactId>
      <type>jar</type>
      <version>2.0.11</version>
    </dependency>
    <dependency>
      <groupId>commons-lang</groupId>
      <artifactId>commons-lang</artifactId>
      <type>jar</type>
      <version>2.6</version>
    </dependency>
    <dependency>
      <groupId>commons-collections</groupId>
      <artifactId>commons-collections</artifactId>
      <type>jar</type>
      <version>3.2.1</version>
    </dependency>
    <dependency>
      <groupId>classworlds</groupId>
      <artifactId>classworlds</artifactId>
      <type>jar</type>
      <version>1.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.ant</groupId>
      <artifactId>ant</artifactId>
      <type>jar</type>
      <version>1.9.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.ant</groupId>
      <artifactId>ant-launcher</artifactId>
      <type>jar</type>
      <version>1.9.1</version>
    </dependency>
    <dependency>
      <groupId>javax.xml.bind</groupId>
      <artifactId>jaxb-api</artifactId>
      <type>jar</type>
      <version>2.2.12</version>
    </dependency>
  </dependencies>
</plugin>